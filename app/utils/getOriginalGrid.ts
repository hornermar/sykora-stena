import { map } from "lodash";

export const originalGrid = [
    // 1
    [
        [2, 1, 0],
        [2, 0, 0],
        [2, 1, 0],
        [1, 3, 1],
        [1, 3, 0],
        [3, 1, 1],
        [2, 2, 1],
        [1, 0, 0],
        [1, 2, 1],
        [1, 2, 1],
        [1, 0, 0],
        [2, 1, 1],
        [3, 0, 1],
        [2, 2, 1],
        [1, 2, 1],
        [1, 2, 1],
        [1, 2, 1],
        [1, 1, 1],
        [2, 0, 1],
        [2, 1, 1],
        [2, 2, 1],
        [2, 2, 1],
        [1, 1, 1],
    ],
    // 2
    [
        [2, 1, 0],
        [1, 3, 1],
        [1, 0, 1],
        [1, 1, 0],
        [1, 0, 0],
        [1, 3, 1],
        [2, 0, 1],
        [1, 1, 0],
        [1, 2, 1],
        [1, 1, 1],
        [1, 1, 0],
        [2, 1, 1],
        [2, 0, 1],
        [3, 0, 1],
        [1, 0, 0],
        [1, 1, 1],
        [1, 1, 1],
        [1, 0, 1],
        [1, 3, 0],
        [1, 3, 1],
        [2, 0, 1],
        [2, 0, 1],
        [1, 3, 0],
    ],
    // 3
    [
        [1, 2, 1],
        [1, 2, 1],
        [3, 1, 1],
        [1, 1, 0],
        [1, 2, 0],
        [1, 1, 0],
        [1, 3, 1],
        [1, 0, 1],
        [1, 2, 1],
        [1, 2, 1],
        [1, 3, 1],
        [1, 2, 0],
        [1, 2, 0],
        [1, 3, 0],
        [1, 2, 1],
        [1, 1, 1],
        [1, 0, 1],
        [2, 3, 0],
        [1, 3, 1],
        [1, 2, 0],
        [2, 2, 1],
        [3, 0, 1],
        [3, 1, 1],
    ],
    // 4
    [
        [1, 1, 1],
        [1, 3, 0],
        [1, 1, 0],
        [1, 0, 0],
        [1, 2, 1],
        [1, 0, 1],
        [3, 1, 0],
        [1, 1, 1],
        [1, 1, 1],
        [1, 0, 1],
        [3, 1, 0],
        [2, 1, 0],
        [1, 3, 1],
        [1, 1, 1],
        [1, 0, 1],
        [1, 0, 1],
        [1, 1, 1],
        [1, 1, 1],
        [3, 1, 0],
        [1, 3, 1],
        [1, 3, 0],
        [1, 0, 0],
        [1, 1, 0],
    ],
    // 5
    [
        [1, 3, 0],
        [3, 0, 0],
        [1, 0, 1],
        [1, 2, 1],
        [1, 2, 1],
        [1, 2, 1],
        [1, 1, 1],
        [1, 1, 1],
        [1, 2, 0],
        [2, 2, 0],
        [2, 2, 0],
        [2, 2, 0],
        [3, 1, 0],
        [1, 2, 1],
        [1, 2, 1],
        [1, 2, 1],
        [1, 0, 0],
        [1, 1, 1],
        [1, 1, 1],
        [1, 2, 1],
        [1, 1, 1],
        [1, 2, 1],
        [1, 2, 1],
    ],
    // 6
    [
        [2, 3, 0],
        [2, 0, 0],
        [3, 0, 0],
        [1, 0, 1],
        [1, 3, 1],
        [2, 2, 0],
        [2, 3, 0],
        [2, 0, 0],
        [1, 3, 1],
        [1, 0, 1],
        [2, 1, 0],
        [2, 0, 0],
        [3, 0, 0],
        [1, 3, 0],
        [1, 1, 1],
        [1, 0, 1],
        [1, 0, 1],
        [2, 3, 0],
        [2, 0, 0],
        [2, 0, 0],
        [1, 3, 1],
        [1, 0, 1],
        [2, 2, 0],
    ],
    // 7
    [
        [1, 1, 1],
        [3, 0, 0],
        [1, 0, 1],
        [1, 3, 0],
        [1, 2, 1],
        [3, 0, 0],
        [2, 2, 0],
        [2, 2, 0],
        [2, 1, 0],
        [2, 0, 0],
        [1, 2, 1],
        [3, 0, 0],
        [2, 1, 0],
        [2, 0, 0],
        [1, 2, 1],
        [3, 0, 0],
        [2, 3, 0],
        [3, 0, 0],
        [2, 1, 0],
        [2, 2, 0],
        [1, 0, 1],
        [1, 3, 0],
        [1, 2, 1],
    ],
    // 8
    [
        [1, 0, 0],
        [1, 0, 0],
        [1, 2, 0],
        [1, 3, 0],
        [1, 0, 0],
        [1, 2, 1],
        [3, 0, 0],
        [2, 1, 0],
        [3, 1, 0],
        [3, 0, 0],
        [1, 0, 1],
        [3, 0, 1],
        [1, 3, 1],
        [1, 0, 1],
        [2, 2, 0],
        [2, 1, 0],
        [2, 3, 0],
        [3, 0, 0],
        [2, 1, 0],
        [1, 2, 1],
        [1, 0, 0],
        [1, 3, 0],
        [1, 0, 0],
    ],
    // 9
    [
        [1, 1, 0],
        [2, 1, 1],
        [1, 2, 0],
        [1, 2, 0],
        [1, 3, 0],
        [1, 1, 1],
        [2, 2, 0],
        [3, 1, 0],
        [1, 1, 1],
        [3, 1, 0],
        [1, 2, 1],
        [1, 2, 1],
        [1, 2, 1],
        [1, 3, 1],
        [2, 2, 0],
        [3, 1, 0],
        [1, 1, 1],
        [2, 2, 0],
        [3, 1, 0],
        [1, 1, 1],
        [1, 2, 0],
        [1, 2, 0],
        [1, 1, 0],
    ],
    // 10
    [
        [1, 1, 0],
        [1, 0, 0],
        [1, 0, 0],
        [1, 2, 1],
        [3, 0, 0],
        [1, 0, 1],
        [2, 1, 0],
        [1, 1, 1],
        [1, 0, 1],
        [1, 2, 0],
        [1, 3, 0],
        [1, 1, 1],
        [2, 2, 0],
        [2, 1, 0],
        [1, 3, 1],
        [1, 3, 1],
        [1, 0, 1],
        [1, 0, 1],
        [2, 3, 0],
        [1, 2, 1],
        [3, 0, 0],
        [1, 0, 1],
        [1, 3, 0],
    ],
    // 11
    [
        [2, 3, 0],
        [1, 1, 0],
        [1, 1, 1],
        [1, 2, 1],
        [3, 0, 0],
        [2, 3, 0],
        [1, 2, 1],
        [1, 2, 1],
        [1, 1, 1],
        [1, 1, 0],
        [1, 1, 1],
        [2, 3, 0],
        [3, 0, 0],
        [2, 2, 0],
        [3, 1, 0],
        [1, 1, 0],
        [1, 2, 1],
        [1, 1, 1],
        [2, 2, 0],
        [2, 3, 0],
        [1, 2, 1],
        [1, 2, 1],
        [1, 1, 1],
    ],
    // 12
    [
        [2, 0, 1],
        [2, 0, 1],
        [3, 0, 1],
        [1, 0, 0],
        [1, 2, 1],
        [2, 0, 0],
        [3, 0, 0],
        [1, 0, 1],
        [1, 0, 1],
        [1, 2, 1],
        [3, 0, 0],
        [2, 2, 0],
        [3, 1, 0],
        [2, 0, 0],
        [3, 0, 0],
        [1, 0, 1],
        [1, 0, 1],
        [1, 0, 1],
        [2, 2, 0],
        [2, 2, 0],
        [2, 3, 0],
        [1, 0, 0],
        [3, 1, 1],
    ],
    // 13
    [
        [2, 1, 1],
        [3, 0, 1],
        [2, 3, 1],
        [1, 0, 1],
        [2, 3, 0],
        [1, 3, 1],
        [1, 1, 0],
        [1, 0, 0],
        [1, 1, 1],
        [2, 2, 0],
        [2, 1, 0],
        [3, 0, 0],
        [1, 2, 0],
        [1, 0, 1],
        [3, 0, 0],
        [2, 3, 0],
        [1, 2, 1],
        [1, 0, 0],
        [1, 2, 1],
        [3, 0, 0],
        [2, 3, 0],
        [1, 2, 1],
        [2, 3, 1],
    ],
    // 14
    [
        [1, 3, 0],
        [1, 3, 0],
        [1, 1, 0],
        [1, 1, 1],
        [1, 1, 1],
        [1, 1, 0],
        [1, 3, 0],
        [1, 0, 0],
        [1, 1, 1],
        [2, 1, 0],
        [1, 2, 1],
        [1, 0, 0],
        [1, 0, 0],
        [1, 0, 0],
        [1, 3, 1],
        [2, 2, 0],
        [1, 0, 1],
        [1, 0, 1],
        [1, 3, 0],
        [1, 2, 1],
        [1, 1, 1],
        [1, 0, 1],
        [1, 1, 0],
    ],
    // 15
    [
        [1, 1, 1],
        [2, 3, 0],
        [1, 2, 1],
        [1, 2, 1],
        [1, 1, 1],
        [1, 2, 0],
        [1, 3, 0],
        [1, 2, 1],
        [1, 2, 1],
        [1, 2, 1],
        [1, 1, 1],
        [1, 1, 0],
        [3, 1, 1],
        [1, 1, 0],
        [1, 2, 1],
        [1, 2, 1],
        [1, 2, 1],
        [1, 2, 1],
        [1, 1, 1],
        [1, 2, 1],
        [1, 2, 1],
        [1, 2, 1],
        [1, 2, 1],
    ],
    // 16
    [
        [2, 3, 0],
        [3, 0, 0],
        [2, 3, 0],
        [1, 1, 1],
        [1, 0, 1],
        [1, 1, 0],
        [1, 0, 0],
        [1, 0, 0],
        [1, 1, 1],
        [1, 0, 1],
        [1, 1, 1],
        [1, 1, 0],
        [1, 1, 0],
        [1, 0, 0],
        [1, 1, 1],
        [1, 1, 1],
        [1, 0, 1],
        [1, 3, 0],
        [1, 0, 0],
        [1, 0, 0],
        [1, 2, 1],
        [1, 1, 1],
        [1, 0, 1],
    ],
    // 17
    [
        [1, 2, 0],
        [1, 2, 0],
        [1, 3, 0],
        [1, 2, 1],
        [1, 2, 1],
        [1, 2, 1],
        [1, 2, 1],
        [1, 2, 1],
        [1, 1, 1],
        [1, 2, 0],
        [1, 0, 1],
        [1, 2, 1],
        [1, 3, 1],
        [1, 2, 1],
        [1, 2, 1],
        [1, 0, 0],
        [1, 2, 1],
        [1, 1, 1],
        [1, 2, 1],
        [1, 2, 1],
        [1, 2, 1],
        [1, 0, 0],
        [1, 0, 0],
    ], // 18
    [
        [1, 1, 0],
        [2, 2, 1],
        [1, 0, 0],
        [1, 3, 0],
        [1, 0, 0],
        [1, 1, 1],
        [2, 2, 0],
        [2, 3, 0],
        [1, 1, 1],
        [1, 1, 0],
        [1, 1, 1],
        [1, 2, 0],
        [3, 1, 0],
        [3, 0, 0],
        [2, 2, 0],
        [1, 1, 0],
        [1, 0, 0],
        [2, 3, 0],
        [2, 0, 0],
        [1, 1, 1],
        [1, 3, 0],
        [1, 0, 0],
        [1, 2, 0],
    ],
    // 19
    [
        [1, 2, 0],
        [1, 2, 0],
        [1, 2, 0],
        [1, 2, 0],
        [1, 1, 0],
        [1, 1, 1],
        [2, 2, 0],
        [2, 3, 0],
        [1, 2, 1],
        [1, 2, 1],
        [1, 2, 1],
        [3, 0, 0],
        [2, 3, 0],
        [2, 1, 0],
        [1, 2, 1],
        [1, 2, 1],
        [1, 3, 1],
        [2, 3, 0],
        [2, 1, 0],
        [1, 2, 1],
        [1, 0, 0],
        [1, 0, 0],
        [1, 2, 0],
    ],
    // 20
    [
        [1, 0, 1],
        [2, 1, 0],
        [1, 3, 1],
        [1, 1, 0],
        [1, 0, 0],
        [1, 1, 1],
        [1, 3, 1],
        [1, 1, 1],
        [1, 0, 1],
        [1, 0, 1],
        [1, 0, 1],
        [1, 0, 1],
        [3, 1, 1],
        [1, 0, 1],
        [1, 0, 1],
        [1, 0, 1],
        [1, 0, 1],
        [1, 1, 1],
        [1, 3, 1],
        [1, 0, 1],
        [1, 0, 1],
        [1, 1, 0],
        [1, 0, 0],
    ],
    // 21
    [
        [1, 1, 1],
        [1, 0, 1],
        [1, 3, 0],
        [1, 2, 0],
        [1, 2, 0],
        [1, 2, 0],
        [1, 1, 0],
        [1, 1, 1],
        [1, 2, 1],
        [1, 1, 1],
        [1, 2, 0],
        [1, 2, 0],
        [1, 1, 0],
        [1, 3, 0],
        [1, 0, 0],
        [1, 2, 1],
        [1, 2, 1],
        [1, 1, 1],
        [1, 1, 0],
        [1, 2, 0],
        [1, 2, 0],
        [1, 2, 0],
        [1, 2, 0],
        [1, 3, 0],
    ],
    // 22
    [
        [1, 0, 0],
        [1, 0, 0],
        [2, 1, 1],
        [1, 1, 0],
        [1, 0, 1],
        [1, 2, 1],
        [1, 0, 0],
        [1, 0, 0],
        [1, 1, 1],
        [2, 3, 0],
        [2, 0, 0],
        [1, 3, 1],
        [1, 2, 0],
        [1, 2, 0],
        [1, 0, 1],
        [2, 2, 0],
        [1, 0, 1],
        [1, 3, 0],
        [1, 0, 0],
        [1, 0, 0],
        [1, 3, 1],
        [1, 2, 1],
        [2, 1, 1],
    ],
    // 23
    [
        [2, 0, 1],
        [3, 0, 1],
        [3, 1, 0],
        [1, 1, 0],
        [1, 2, 1],
        [2, 0, 0],
        [1, 2, 1],
        [1, 2, 1],
        [1, 2, 1],
        [1, 1, 1],
        [3, 0, 0],
        [2, 1, 0],
        [1, 2, 1],
        [1, 2, 1],
        [3, 0, 0],
        [1, 0, 1],
        [1, 2, 1],
        [1, 1, 1],
        [1, 0, 1],
        [2, 2, 0],
        [1, 0, 1],
        [1, 2, 0],
        [1, 2, 0],
    ],
    // 24
    [
        [2, 1, 1],
        [3, 0, 1],
        [1, 3, 1],
        [1, 0, 1],
        [1, 1, 1],
        [1, 0, 1],
        [1, 0, 1],
        [1, 2, 0],
        [1, 0, 1],
        [1, 3, 0],
        [2, 0, 0],
        [2, 0, 0],
        [2, 0, 0],
        [2, 3, 0],
        [3, 0, 0],
        [1, 3, 0],
        [1, 1, 1],
        [1, 2, 0],
        [1, 0, 1],
        [1, 0, 1],
        [1, 2, 1],
        [1, 0, 1],
        [1, 3, 1],
    ],
    // 25
    [
        [2, 2, 1],
        [3, 1, 1],
        [1, 1, 0],
        [1, 2, 1],
        [3, 0, 0],
        [1, 0, 1],
        [1, 1, 1],
        [1, 2, 0],
        [1, 2, 0],
        [1, 3, 0],
        [1, 3, 1],
        [2, 2, 0],
        [2, 2, 0],
        [2, 3, 0],
        [1, 3, 1],
        [1, 2, 0],
        [1, 2, 0],
        [1, 1, 0],
        [1, 2, 0],
        [1, 2, 0],
        [3, 0, 0],
        [1, 0, 1],
        [1, 1, 0],
    ],
    // 26
    [
        [2, 2, 1],
        [2, 3, 1],
        [1, 1, 0],
        [1, 1, 1],
        [1, 1, 0],
        [1, 1, 1],
        [1, 0, 1],
        [1, 0, 1],
        [1, 3, 1],
        [1, 1, 1],
        [1, 0, 1],
        [1, 3, 1],
        [1, 0, 1],
        [1, 1, 1],
        [1, 0, 1],
        [1, 0, 1],
        [1, 3, 1],
        [1, 0, 1],
        [1, 0, 1],
        [1, 0, 1],
        [1, 1, 0],
        [1, 2, 1],
        [1, 0, 0],
    ],
    // 27
    [
        [3, 0, 1],
        [2, 3, 1],
        [1, 1, 0],
        [1, 1, 0],
        [1, 1, 0],
        [1, 0, 0],
        [3, 0, 0],
        [2, 2, 0],
        [3, 1, 0],
        [1, 2, 1],
        [1, 1, 1],
        [2, 0, 1],
        [1, 3, 0],
        [1, 0, 0],
        [1, 2, 1],
        [1, 1, 1],
        [2, 1, 0],
        [2, 3, 0],
        [3, 0, 0],
        [1, 2, 0],
        [1, 2, 0],
        [1, 1, 0],
        [2, 2, 1],
    ],
    // 28
    [
        [3, 1, 1],
        [1, 2, 0],
        [1, 0, 1],
        [1, 1, 0],
        [1, 0, 0],
        [1, 3, 1],
        [1, 2, 1],
        [2, 0, 0],
        [2, 0, 0],
        [3, 0, 0],
        [1, 0, 1],
        [1, 0, 1],
        [1, 1, 1],
        [1, 3, 1],
        [1, 0, 1],
        [2, 2, 0],
        [2, 1, 0],
        [2, 2, 0],
        [2, 1, 0],
        [1, 3, 1],
        [1, 3, 0],
        [1, 0, 0],
        [1, 2, 1],
    ],
    // 29
    [
        [1, 2, 1],
        [1, 2, 1],
        [1, 2, 1],
        [1, 2, 1],
        [1, 1, 1],
        [3, 1, 0],
        [2, 2, 0],
        [3, 1, 0],
        [1, 2, 1],
        [1, 2, 1],
        [3, 0, 0],
        [2, 3, 0],
        [1, 1, 1],
        [1, 1, 0],
        [1, 1, 1],
        [1, 3, 1],
        [3, 1, 0],
        [2, 2, 0],
        [2, 2, 0],
        [2, 1, 0],
        [1, 1, 1],
        [1, 2, 1],
        [1, 1, 1],
    ],
    // 30
    [
        [1, 2, 1],
        [3, 0, 0],
        [1, 0, 1],
        [2, 3, 0],
        [3, 0, 0],
        [2, 2, 0],
        [2, 1, 0],
        [3, 0, 0],
        [1, 2, 0],
        [2, 2, 0],
        [2, 1, 0],
        [3, 0, 0],
        [2, 3, 0],
        [2, 0, 0],
        [2, 0, 0],
        [2, 1, 0],
        [1, 0, 0],
        [2, 0, 0],
        [2, 1, 0],
        [2, 0, 0],
        [2, 0, 0],
        [3, 0, 0],
        [1, 0, 1],
    ],
    // 31
    [
        [1, 2, 0],
        [1, 1, 0],
        [1, 2, 1],
        [3, 0, 0],
        [2, 1, 0],
        [3, 0, 0],
        [3, 1, 0],
        [1, 2, 1],
        [1, 3, 1],
        [2, 2, 0],
        [2, 2, 0],
        [2, 1, 0],
        [3, 0, 0],
        [2, 1, 0],
        [3, 0, 0],
        [2, 1, 0],
        [1, 3, 1],
        [1, 3, 1],
        [3, 1, 0],
        [3, 0, 0],
        [2, 2, 0],
        [2, 1, 0],
        [1, 1, 1],
    ],
    // 32
    [
        [2, 3, 1],
        [1, 1, 0],
        [3, 1, 1],
        [1, 0, 1],
        [1, 0, 1],
        [1, 0, 1],
        [2, 2, 0],
        [2, 3, 0],
        [1, 2, 1],
        [3, 0, 0],
        [2, 1, 0],
        [1, 3, 1],
        [1, 0, 1],
        [2, 1, 0],
        [2, 0, 0],
        [3, 0, 0],
        [1, 0, 1],
        [3, 1, 0],
        [2, 0, 0],
        [1, 2, 1],
        [1, 2, 1],
        [1, 2, 1],
        [3, 1, 1],
    ],
    // 33
    [
        [1, 1, 0],
        [1, 2, 0],
        [1, 1, 0],
        [1, 3, 0],
        [1, 0, 0],
        [1, 1, 1],
        [1, 1, 0],
        [1, 1, 1],
        [3, 0, 0],
        [3, 1, 0],
        [1, 2, 1],
        [2, 3, 1],
        [1, 3, 0],
        [1, 3, 1],
        [2, 1, 0],
        [3, 0, 0],
        [2, 3, 0],
        [1, 1, 1],
        [1, 1, 0],
        [1, 1, 1],
        [1, 0, 0],
        [1, 0, 0],
        [1, 1, 0],
    ],
];

export const getOriginal = () => {
    // new empty grid with the same dimensions as the original
    let newGrid: string[][] = [];

    for (let i = 0; i < originalGrid.length; i++) {
        newGrid.push([]);
        for (let j = 0; j < originalGrid[i].length; j++) {
            newGrid[i].push("");
        }
    }

    map(originalGrid, (row: number[][], i) => {
        map(row, (cell: number[], j) => {
            if (cell[0] === 1) {
                if (cell[1] === 0) {
                    if (cell[2] === 0) {
                        // 1 0 0
                        newGrid[i][j] = "3z";
                    } else if (cell[2] === 1) {
                        // 1 0 1
                        newGrid[i][j] = "2z";
                    }
                } else if (cell[1] === 1) {
                    if (cell[2] === 0) {
                        // 1 1 0
                        newGrid[i][j] = "3r";
                    } else if (cell[2] === 1) {
                        // 1 1 1
                        newGrid[i][j] = "2r";
                    }
                } else if (cell[1] === 2) {
                    if (cell[2] === 0) {
                        // 1 2 0
                        newGrid[i][j] = "3y";
                    } else if (cell[2] === 1) {
                        // 1 2 1
                        newGrid[i][j] = "2y";
                    }
                } else if (cell[1] === 3) {
                    if (cell[2] === 0) {
                        // 1 3 0
                        newGrid[i][j] = "3b";
                    } else if (cell[2] === 1) {
                        newGrid[i][j] = "2b";
                    }
                }
            } else if (cell[0] === 2) {
                if (cell[1] === 0) {
                    if (cell[2] === 0) {
                        // 2 0 0
                        newGrid[i][j] = "1z";
                    } else if (cell[2] === 1) {
                        // 2 0 1
                        newGrid[i][j] = "4z";
                    }
                } else if (cell[1] === 1) {
                    if (cell[2] === 0) {
                        // 2 1 0
                        newGrid[i][j] = "1i";
                    } else if (cell[2] === 1) {
                        // 2 1 1
                        newGrid[i][j] = "4i";
                    }
                } else if (cell[1] === 2) {
                    if (cell[2] === 0) {
                        // 2 2 0
                        newGrid[i][j] = "1y";
                    } else if (cell[2] === 1) {
                        // 2 2 1
                        newGrid[i][j] = "4y";
                    }
                } else if (cell[1] === 3) {
                    if (cell[2] === 0) {
                        // 2 3 0
                        newGrid[i][j] = "1b";
                    } else if (cell[2] === 1) {
                        // 2 3 1
                        newGrid[i][j] = "4b";
                    }
                }
            } else if (cell[0] === 3) {
                if (cell[1] === 0) {
                    if (cell[2] === 0) {
                        // 3 0 0
                        newGrid[i][j] = "1r";
                    } else if (cell[2] === 1) {
                        // 3 0 1
                        newGrid[i][j] = "4r";
                    }
                } else if (cell[1] === 1) {
                    if (cell[2] === 0) {
                        // 3 1 0
                        newGrid[i][j] = "4d";
                    } else if (cell[2] === 1) {
                        // 3 1 1
                        newGrid[i][j] = "4d";
                    }
                }
            }
        });
    });

    return newGrid;
};
